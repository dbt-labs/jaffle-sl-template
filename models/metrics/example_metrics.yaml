metrics:
  - name: "order_count"
    description: "Count of orders"
    type: simple
    label: "test"
    type_params:
      measure: orders
  - name: "order_total"
    description: "Sum of orders value"
    type: simple
    label: "test"
    type_params:
      measure: order_total
  - name: "food_order_total"
    description: "Sum of orders value for food items only"
    type: simple
    label: "test"
    type_params:
      measure: order_total
    filter: |
      {{ dimension('is_food_item') }} = True
  - name: "supply_cost"
    label: "test"
    description: The cost of supplies for fulfilling orders.
    type: simple
    type_params:
      measure: supply_cost
  - name: "large_order"
    description: "Order with order values over 20."
    type: simple
    label: "test"
    type_params:
      measure: orders
    filter: |
      {{ dimension('order_total_dim') }} >= 20
  - name: "jumbo_order"
    description: "Order with order values over 50."
    type: simple
    label: "test"
    type_params:
      measure: orders
    filter: |
      {{ dimension('order_total_dim') }} >= 70
  - name: "customers"
    description: "Count of customers"
    type: simple
    label: "test"
    type_params:
      measure: customers
  - name: "median_order_value"
    description: "Median order value"
    type: simple
    label: "test"
    type_params:
      measure: median_order_value
  - name: "order_value_p99"
    description: "Top 1% order value using approximate percentile"
    type: simple
    label: "test"
    type_params:
      measure: order_value_p99
  - name: "discrete_order_value_p99"
    description: "Top 1% order value using discrete percentile"
    type: simple
    label: "test"
    type_params:
      measure: discrete_order_value_p99

  # Ratio type metric
  - name: "new_customer_order_pct"
    # description: "The food cost as the % of the total order"
    # TODO: is this the right interpretation?
    description: "Percentage of customers that have only made a first purchase"
    label: "test"
    type: ratio
    type_params:
      numerator:
        name: customers
        filter: | #entity_path is the entity the dimension belongs to. TODO: why is this neccessary?
          {{dimension('customer_type', entity_path=['customer'])}} = 'new'
        alias: customer_numerator
      denominator: customers
  - name: "food_order_pct"
    description: "The food cost as the % of the total order"
    label: "test"
    type: ratio
    type_params:
      numerator: 
      denominator: order_total
  # TODO: add non additive example
  # Derived Metrics
  - name: "order_gross_profit"
    description: "Gross profit from each order."
    type: derived
    label: "test"
    type_params:
      expr: revenue - cost
      metrics:
        - name: order_total
          alias: revenue
        - name: supply_cost
          alias: cost
  #The food cost as the % of the total order # - name: "food_order_pct_cumulative"
  # #   label: "test"
  # #   description: "Contrived example to show a ratio  refrenced in a derviced "
  # #   type: derived
  # #   type_params:
  # #     expr: food_order_pct * 100
  # #     metrics:
  # #       - name: "food_order_pct"
  # # - name: "cumlative_growth_mom"
  # #   description: "Contrived example to show a ratio  refrenced in a derviced "
  # #   label: "test"
  # #   type: derived
  # #   type_params:
  # #     expr: cumulative_order_amount/cumulative_order_amount_lm
  # #     metrics:
  # #       - name: "cumulative_order_amount"
  # #       - name: "cumulative_order_amount"
  # #         offset_window: 1 month
  # #         alias: cumulative_order_amount_lm
  # # - name: "food_order_gross_profit"
  # #   label: "test"
  # #   description: "The gross profit for each order"
  # #   type: derived
  # #   type_params:
  # #     expr: revenue - cost
  # #     metrics:
  # #       - name: order_total
  # #         alias: revenue
  # #         filter: |
  # #           dimension('is_food_order')" = True
  # #       - name: order_amount
  # #         alias: cost
  # #         filter: |
  # #           dimension('is_food_order')" = True
  # # - name: "cumulative_order_amount"
  # #   label: "test"
  # #   description: "The cumulative value of all orders"
  # #   type: cumulative
  # #   type_params:
  # #     measure: order_total
  # # - name: "cumulative_order_ammount_l1m"
  # #   label: "test"
  # #   description: "The cumulative value of all orders"
  # #   type: cumulative
  # #   type_params:
  # #     measure: order_total
  # #     window: 1 month
  # # - name: "cumulative_order_amount_mtd"
  # #   label: "test"
  # #   description: "The cumulative value of all orders"
  # #   type: cumulative
  # #   type_params:
  # #     measure: order_total
  # #     grain_to_date: month
  # - name: "order_count"
  #   label: "test"
  #   description: "The number of orders places"
  #   type: simple
  #   type_params:
  #     measure: orders
  # - name: "max_order_amount"
  #   label: "test"
  #   description: "The highest order value for a given period"
  #   type: simple
  #   type_params:
  #     measure: max_order_value
  # - name: "min_order_amount"
  #   label: "test"
  #   description: "The lowest order value for a given period"
  #   type: simple
  #   type_params:
  #     measure: min_order_value
  - name: "customers_with_orders"
    label: "test"
    description: "Unique count of customers placing orders"
    type: simple
    type_params:
      measure: customers
  # - name: "returning_customers_with_orders"
  #   label: "test"
  #   description: "Unique count of customers placing orders"
  #   type: simple
  #   type_params:
  #     measure: customers
  #   filter: |
  #      {{dimension('customer_type', entity_path=['customer'])}} = 'returning'
  # - name: "new_customer_with_orders"
  #   label: "test"
  #   description: "Unique count of customers placing orders"
  #   type: simple
  #   type_params:
  #     measure: customers
  #   filter: |
  #     {{dimension('customer_type', entity_path=['customer'])}}  = 'new'
  # - name: "average_order_amount"
  #   label: "test"
  #   description: "The average order value"
  #   type: simple
  #   type_params:
  #     measure: average_order_value
